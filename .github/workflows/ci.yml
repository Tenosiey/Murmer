name: CI

on:
  push:
    branches: [main, dev-*]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  fmt:
    name: Format Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: 1.90.0
          components: rustfmt
      
      - name: Check formatting
        run: cargo fmt --all --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: 1.90.0
          components: clippy
      
      - name: Setup cache
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: "ci"
      
      - name: Run clippy
        run: cargo clippy --workspace --all-targets --all-features -- -D warnings

  test-server:
    name: Test Server
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: 1.90.0
      
      - name: Setup cache
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: "ci"
      
      - name: Run server tests
        working-directory: murmer_server
        run: cargo test --workspace

  audit:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: 1.90.0
      
      - name: Install cargo-audit
        run: cargo install cargo-audit --locked
      
      - name: Run audit
        run: cargo audit

  check-client:
    name: Check Client (TypeScript/Svelte)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: murmer_client
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: murmer_client/package-lock.json
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run type checking
        run: npm run check
      
      - name: Run npm audit
        run: npm audit --audit-level=moderate

  build-tauri:
    name: Build Tauri App
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    defaults:
      run:
        working-directory: murmer_client
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: 1.90.0
      
      - name: Setup cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: murmer_client/src-tauri
          shared-key: "tauri-${{ matrix.platform }}"
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: murmer_client/package-lock.json
      
      - name: Install system dependencies (Ubuntu)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.1-dev \
            libappindicator3-dev \
            librsvg2-dev \
            patchelf
      
      - name: Install npm dependencies
        run: npm ci
      
      - name: Build Tauri app
        run: npm run tauri build
      
      - name: Upload artifacts (Ubuntu)
        if: matrix.platform == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: murmer-linux
          path: |
            murmer_client/src-tauri/target/release/bundle/deb/*.deb
            murmer_client/src-tauri/target/release/bundle/appimage/*.AppImage
          if-no-files-found: warn
      
      - name: Upload artifacts (Windows)
        if: matrix.platform == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: murmer-windows
          path: |
            murmer_client/src-tauri/target/release/bundle/msi/*.msi
            murmer_client/src-tauri/target/release/bundle/nsis/*.exe
          if-no-files-found: warn

  docker-build:
    name: Docker Build Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          context: murmer_server
          push: false
          tags: murmer-server:test
          cache-from: type=gha
          cache-to: type=gha,mode=max
